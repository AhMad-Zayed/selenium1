<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="31" passed="31" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-12T05:40:11 IST" name="Command line suite" finished-at="2022-11-12T05:46:34 IST" duration-ms="382510">
    <groups>
    </groups>
    <test started-at="2022-11-12T05:40:11 IST" name="Command line test" finished-at="2022-11-12T05:46:34 IST" duration-ms="382510">
      <class name="com.crm.testpages.TestReportsPage">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestReportsPage@1e683a3e]" started-at="2022-11-12T05:46:21 IST" name="beforeMethod" finished-at="2022-11-12T05:46:32 IST" duration-ms="11041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newCallStatusTest(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestReportsPage@1e683a3e]" started-at="2022-11-12T05:46:32 IST" name="newCallStatusTest" finished-at="2022-11-12T05:46:33 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestReportsPage.newCallStatusTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newCallStatusTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestReportsPage@1e683a3e]" started-at="2022-11-12T05:46:33 IST" name="afterMethod" finished-at="2022-11-12T05:46:34 IST" duration-ms="236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestReportsPage.newCallStatusTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.crm.testpages.TestReportsPage -->
      <class name="com.crm.testpages.TestCompaniesPage">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCompaniesPage@7ea9e1e2]" started-at="2022-11-12T05:42:44 IST" name="beforeMethod" finished-at="2022-11-12T05:42:54 IST" duration-ms="10635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newCompanyTest(java.lang.reflect.Method)[pri:1, instance:com.crm.testpages.TestCompaniesPage@7ea9e1e2]" started-at="2022-11-12T05:42:54 IST" name="newCompanyTest" finished-at="2022-11-12T05:42:55 IST" duration-ms="1151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCompaniesPage.newCompanyTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newCompanyTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCompaniesPage@7ea9e1e2]" started-at="2022-11-12T05:42:55 IST" name="afterMethod" finished-at="2022-11-12T05:42:56 IST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCompaniesPage.newCompanyTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCompaniesPage@7ea9e1e2]" started-at="2022-11-12T05:42:56 IST" name="beforeMethod" finished-at="2022-11-12T05:43:09 IST" duration-ms="13203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="combinedFormTest(java.lang.reflect.Method)[pri:2, instance:com.crm.testpages.TestCompaniesPage@7ea9e1e2]" started-at="2022-11-12T05:43:09 IST" name="combinedFormTest" finished-at="2022-11-12T05:43:10 IST" duration-ms="1377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCompaniesPage.combinedFormTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- combinedFormTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCompaniesPage@7ea9e1e2]" started-at="2022-11-12T05:43:10 IST" name="afterMethod" finished-at="2022-11-12T05:43:10 IST" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCompaniesPage.combinedFormTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCompaniesPage@7ea9e1e2]" started-at="2022-11-12T05:43:10 IST" name="beforeMethod" finished-at="2022-11-12T05:43:22 IST" duration-ms="11248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fullSearchFormTest(java.lang.reflect.Method)[pri:3, instance:com.crm.testpages.TestCompaniesPage@7ea9e1e2]" started-at="2022-11-12T05:43:22 IST" name="fullSearchFormTest" finished-at="2022-11-12T05:43:23 IST" duration-ms="1373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCompaniesPage.fullSearchFormTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fullSearchFormTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCompaniesPage@7ea9e1e2]" started-at="2022-11-12T05:43:23 IST" name="afterMethod" finished-at="2022-11-12T05:43:23 IST" duration-ms="247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCompaniesPage.fullSearchFormTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.crm.testpages.TestCompaniesPage -->
      <class name="com.crm.testpages.TestMainPage">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.crm.testpages.TestMainPage@2b48a640]" started-at="2022-11-12T05:46:15 IST" name="beforeClass" finished-at="2022-11-12T05:46:19 IST" duration-ms="4666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="enabledLoginButtonTest(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestMainPage@2b48a640]" started-at="2022-11-12T05:46:19 IST" name="enabledLoginButtonTest" finished-at="2022-11-12T05:46:19 IST" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestMainPage.enabledLoginButtonTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enabledLoginButtonTest -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestMainPage@2b48a640]" started-at="2022-11-12T05:46:19 IST" name="tearDown" finished-at="2022-11-12T05:46:19 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestMainPage.enabledLoginButtonTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="logoTest(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestMainPage@2b48a640]" started-at="2022-11-12T05:46:19 IST" name="logoTest" finished-at="2022-11-12T05:46:19 IST" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestMainPage.logoTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoTest -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestMainPage@2b48a640]" started-at="2022-11-12T05:46:19 IST" name="tearDown" finished-at="2022-11-12T05:46:20 IST" duration-ms="407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestMainPage.logoTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="titleTest(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestMainPage@2b48a640]" started-at="2022-11-12T05:46:20 IST" name="titleTest" finished-at="2022-11-12T05:46:20 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestMainPage.titleTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleTest -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestMainPage@2b48a640]" started-at="2022-11-12T05:46:20 IST" name="tearDown" finished-at="2022-11-12T05:46:21 IST" duration-ms="669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestMainPage.titleTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="urlTest(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestMainPage@2b48a640]" started-at="2022-11-12T05:46:21 IST" name="urlTest" finished-at="2022-11-12T05:46:21 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestMainPage.urlTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- urlTest -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestMainPage@2b48a640]" started-at="2022-11-12T05:46:21 IST" name="tearDown" finished-at="2022-11-12T05:46:21 IST" duration-ms="641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestMainPage.urlTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.crm.testpages.TestMainPage@2b48a640]" started-at="2022-11-12T05:46:21 IST" name="afterClass" finished-at="2022-11-12T05:46:21 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.crm.testpages.TestMainPage -->
      <class name="com.crm.testpages.TestContactsPage">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:43:23 IST" name="beforeMethod" finished-at="2022-11-12T05:43:41 IST" duration-ms="18138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addContactTest(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:43:41 IST" name="addContactTest" data-provider="getData" finished-at="2022-11-12T05:43:45 IST" duration-ms="3819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestContactsPage.addContactTest(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[fffff]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mmmm]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[llll]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[nnnn]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[cccc]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[pppp]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addContactTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:43:45 IST" name="afterMethod" finished-at="2022-11-12T05:43:46 IST" duration-ms="262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestContactsPage.addContactTest(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:43:46 IST" name="beforeMethod" finished-at="2022-11-12T05:43:57 IST" duration-ms="11625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addContactTest(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:43:57 IST" name="addContactTest" data-provider="getData" finished-at="2022-11-12T05:44:01 IST" duration-ms="3397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestContactsPage.addContactTest(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[asd]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[asd]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[asdasd]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[asd]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[asd]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[1313123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addContactTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:44:01 IST" name="afterMethod" finished-at="2022-11-12T05:44:01 IST" duration-ms="236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestContactsPage.addContactTest(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:44:01 IST" name="beforeMethod" finished-at="2022-11-12T05:44:12 IST" duration-ms="10835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addContactTest(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:44:12 IST" name="addContactTest" data-provider="getData" finished-at="2022-11-12T05:44:15 IST" duration-ms="3437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestContactsPage.addContactTest(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[asd]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[asd]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[234234]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[asdasd3]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[xvsdf]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[sdfsdf]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[34234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addContactTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:44:15 IST" name="afterMethod" finished-at="2022-11-12T05:44:15 IST" duration-ms="238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestContactsPage.addContactTest(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:44:15 IST" name="beforeMethod" finished-at="2022-11-12T05:44:27 IST" duration-ms="11941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newContactsTest(java.lang.reflect.Method)[pri:1, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:44:27 IST" name="newContactsTest" finished-at="2022-11-12T05:44:29 IST" duration-ms="1421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestContactsPage.newContactsTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newContactsTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestContactsPage@24fcf36f]" started-at="2022-11-12T05:44:29 IST" name="afterMethod" finished-at="2022-11-12T05:44:29 IST" duration-ms="212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestContactsPage.newContactsTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.crm.testpages.TestContactsPage -->
      <class name="com.crm.testpages.TestIsPremiumAccount">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestIsPremiumAccount@ea6147e]" started-at="2022-11-12T05:45:09 IST" name="beforeMethod" finished-at="2022-11-12T05:45:21 IST" duration-ms="11565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newCallStatusTest1(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestIsPremiumAccount@ea6147e]" started-at="2022-11-12T05:45:21 IST" name="newCallStatusTest1" finished-at="2022-11-12T05:45:22 IST" duration-ms="1145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestIsPremiumAccount.newCallStatusTest1(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newCallStatusTest1 -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestIsPremiumAccount@ea6147e]" started-at="2022-11-12T05:45:22 IST" name="afterMethod" finished-at="2022-11-12T05:45:22 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestIsPremiumAccount.newCallStatusTest1(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestIsPremiumAccount@ea6147e]" started-at="2022-11-12T05:45:22 IST" name="beforeMethod" finished-at="2022-11-12T05:45:37 IST" duration-ms="14512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newCallStatusTest2(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestIsPremiumAccount@ea6147e]" started-at="2022-11-12T05:45:37 IST" name="newCallStatusTest2" finished-at="2022-11-12T05:45:38 IST" duration-ms="1467" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestIsPremiumAccount.newCallStatusTest2(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newCallStatusTest2 -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestIsPremiumAccount@ea6147e]" started-at="2022-11-12T05:45:38 IST" name="afterMethod" finished-at="2022-11-12T05:45:38 IST" duration-ms="273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestIsPremiumAccount.newCallStatusTest2(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.crm.testpages.TestIsPremiumAccount -->
      <class name="com.crm.testpages.TestCalendarPage">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:40:11 IST" name="beforeMethod" finished-at="2022-11-12T05:40:22 IST" duration-ms="10980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newEventTest(java.lang.reflect.Method)[pri:1, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:40:22 IST" name="newEventTest" finished-at="2022-11-12T05:40:24 IST" duration-ms="1524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCalendarPage.newEventTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newEventTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:40:24 IST" name="afterMethod" finished-at="2022-11-12T05:40:24 IST" duration-ms="420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCalendarPage.newEventTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:40:24 IST" name="beforeMethod" finished-at="2022-11-12T05:40:38 IST" duration-ms="14165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="viewTodayTest(java.lang.reflect.Method)[pri:2, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:40:38 IST" name="viewTodayTest" finished-at="2022-11-12T05:40:40 IST" duration-ms="1383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCalendarPage.viewTodayTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewTodayTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:40:40 IST" name="afterMethod" finished-at="2022-11-12T05:40:40 IST" duration-ms="258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCalendarPage.viewTodayTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:40:40 IST" name="beforeMethod" finished-at="2022-11-12T05:40:52 IST" duration-ms="11847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="weekViewTest(java.lang.reflect.Method)[pri:3, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:40:52 IST" name="weekViewTest" finished-at="2022-11-12T05:40:53 IST" duration-ms="1507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCalendarPage.weekViewTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weekViewTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:40:53 IST" name="afterMethod" finished-at="2022-11-12T05:40:54 IST" duration-ms="237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCalendarPage.weekViewTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:40:54 IST" name="beforeMethod" finished-at="2022-11-12T05:41:11 IST" duration-ms="17631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="monthViewTest(java.lang.reflect.Method)[pri:4, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:41:11 IST" name="monthViewTest" finished-at="2022-11-12T05:41:13 IST" duration-ms="1500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCalendarPage.monthViewTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthViewTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCalendarPage@a3d8174]" started-at="2022-11-12T05:41:13 IST" name="afterMethod" finished-at="2022-11-12T05:41:13 IST" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCalendarPage.monthViewTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.crm.testpages.TestCalendarPage -->
      <class name="com.crm.testpages.TestLoginPage">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:45:38 IST" name="openBrowser" finished-at="2022-11-12T05:45:46 IST" duration-ms="7953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="loginTest(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:45:46 IST" name="loginTest" finished-at="2022-11-12T05:45:52 IST" duration-ms="5168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestLoginPage.loginTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:45:52 IST" name="tearDown" finished-at="2022-11-12T05:45:52 IST" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestLoginPage.loginTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:45:52 IST" name="openBrowser" finished-at="2022-11-12T05:45:58 IST" duration-ms="6009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="loginTest2(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:45:58 IST" name="loginTest2" finished-at="2022-11-12T05:46:00 IST" duration-ms="1845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestLoginPage.loginTest2(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest2 -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:46:00 IST" name="tearDown" finished-at="2022-11-12T05:46:00 IST" duration-ms="217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestLoginPage.loginTest2(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:46:00 IST" name="openBrowser" finished-at="2022-11-12T05:46:06 IST" duration-ms="5626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="loginTest3(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:46:06 IST" name="loginTest3" finished-at="2022-11-12T05:46:08 IST" duration-ms="2195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestLoginPage.loginTest3(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest3 -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:46:08 IST" name="tearDown" finished-at="2022-11-12T05:46:08 IST" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestLoginPage.loginTest3(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:46:08 IST" name="openBrowser" finished-at="2022-11-12T05:46:13 IST" duration-ms="4630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="loginTest4(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:46:13 IST" name="loginTest4" finished-at="2022-11-12T05:46:14 IST" duration-ms="1689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestLoginPage.loginTest4(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest4 -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestLoginPage@4d02f94e]" started-at="2022-11-12T05:46:14 IST" name="tearDown" finished-at="2022-11-12T05:46:15 IST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestLoginPage.loginTest4(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.crm.testpages.TestLoginPage -->
      <class name="com.crm.testpages.TestHomePage">
        <test-method is-config="true" signature="initAndLogin()[pri:0, instance:com.crm.testpages.TestHomePage@3fb1549b]" started-at="2022-11-12T05:44:48 IST" name="initAndLogin" finished-at="2022-11-12T05:44:58 IST" duration-ms="10487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initAndLogin -->
        <test-method signature="youAreInHomePageTest1(java.lang.reflect.Method)[pri:1, instance:com.crm.testpages.TestHomePage@3fb1549b]" started-at="2022-11-12T05:44:58 IST" name="youAreInHomePageTest1" finished-at="2022-11-12T05:44:59 IST" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestHomePage.youAreInHomePageTest1(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- youAreInHomePageTest1 -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestHomePage@3fb1549b]" started-at="2022-11-12T05:44:59 IST" name="tearDown" finished-at="2022-11-12T05:44:59 IST" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestHomePage.youAreInHomePageTest1(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initAndLogin()[pri:0, instance:com.crm.testpages.TestHomePage@3fb1549b]" started-at="2022-11-12T05:44:59 IST" name="initAndLogin" finished-at="2022-11-12T05:45:09 IST" duration-ms="10220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initAndLogin -->
        <test-method signature="youAreInHomePageTest2(java.lang.reflect.Method)[pri:2, instance:com.crm.testpages.TestHomePage@3fb1549b]" started-at="2022-11-12T05:45:09 IST" name="youAreInHomePageTest2" finished-at="2022-11-12T05:45:09 IST" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestHomePage.youAreInHomePageTest2(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- youAreInHomePageTest2 -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestHomePage@3fb1549b]" started-at="2022-11-12T05:45:09 IST" name="tearDown" finished-at="2022-11-12T05:45:09 IST" duration-ms="240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestHomePage.youAreInHomePageTest2(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.crm.testpages.TestHomePage -->
      <class name="com.crm.testpages.TestDealsPage">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestDealsPage@10feca44]" started-at="2022-11-12T05:44:29 IST" name="beforeMethod" finished-at="2022-11-12T05:44:46 IST" duration-ms="16992" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newDealStatusTest(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestDealsPage@10feca44]" started-at="2022-11-12T05:44:46 IST" name="newDealStatusTest" finished-at="2022-11-12T05:44:48 IST" duration-ms="1714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestDealsPage.newDealStatusTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newDealStatusTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestDealsPage@10feca44]" started-at="2022-11-12T05:44:48 IST" name="afterMethod" finished-at="2022-11-12T05:44:48 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestDealsPage.newDealStatusTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.crm.testpages.TestDealsPage -->
      <class name="com.crm.testpages.TestCallPage">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:41:13 IST" name="beforeMethod" finished-at="2022-11-12T05:41:23 IST" duration-ms="10197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newCallStatusTest(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:41:23 IST" name="newCallStatusTest" finished-at="2022-11-12T05:41:24 IST" duration-ms="1438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCallPage.newCallStatusTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newCallStatusTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:41:24 IST" name="afterMethod" finished-at="2022-11-12T05:41:25 IST" duration-ms="248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCallPage.newCallStatusTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:41:25 IST" name="beforeMethod" finished-at="2022-11-12T05:41:38 IST" duration-ms="12781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newcallDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:41:38 IST" name="newcallDataTest" data-provider="getData" finished-at="2022-11-12T05:41:41 IST" duration-ms="3798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11-Nov-2022 16:30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[call me in the morning]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ahmad]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[tcc]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newcallDataTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:41:41 IST" name="afterMethod" finished-at="2022-11-12T05:41:42 IST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCallPage.newcallDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:41:42 IST" name="beforeMethod" finished-at="2022-11-12T05:41:53 IST" duration-ms="11278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newcallDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:41:53 IST" name="newcallDataTest" data-provider="getData" finished-at="2022-11-12T05:41:56 IST" duration-ms="3482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12-Nov-2022 11:20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[call me now]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[samar]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[trc]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newcallDataTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:41:56 IST" name="afterMethod" finished-at="2022-11-12T05:41:57 IST" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCallPage.newcallDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:41:57 IST" name="beforeMethod" finished-at="2022-11-12T05:42:11 IST" duration-ms="14037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newcallDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:42:11 IST" name="newcallDataTest" data-provider="getData" finished-at="2022-11-12T05:42:14 IST" duration-ms="3634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12-Nov-2022 11:23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[call me]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mazen]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[company]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newcallDataTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:42:14 IST" name="afterMethod" finished-at="2022-11-12T05:42:14 IST" duration-ms="248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCallPage.newcallDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:42:14 IST" name="beforeMethod" finished-at="2022-11-12T05:42:24 IST" duration-ms="9354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newcallDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:42:24 IST" name="newcallDataTest" data-provider="getData" finished-at="2022-11-12T05:42:28 IST" duration-ms="3724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12-Dec-2022 15:00]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[try to call me]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[sam]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[wert]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newcallDataTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:42:28 IST" name="afterMethod" finished-at="2022-11-12T05:42:28 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCallPage.newcallDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:42:28 IST" name="beforeMethod" finished-at="2022-11-12T05:42:40 IST" duration-ms="11836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="newcallDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:42:40 IST" name="newcallDataTest" data-provider="getData" finished-at="2022-11-12T05:42:43 IST" duration-ms="3614" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[17-Apr-2023 19:35]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sara call him]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[basem]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[alert]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newcallDataTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.crm.testpages.TestCallPage@3059cbc]" started-at="2022-11-12T05:42:43 IST" name="afterMethod" finished-at="2022-11-12T05:42:44 IST" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.crm.testpages.TestCallPage.newcallDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.crm.testpages.TestCallPage -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
